{"version":3,"sources":["firebase/firebase_config.js","components/AddNote.jsx","components/Note.jsx","components/NotesList.jsx","components/Search.jsx","components/Header.jsx","components/Home.jsx","images/noteImage.png","components/Log.jsx","App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","Timestamp","AddNote","handleAddNote","useState","noteText","setNoteText","a","addDoc","collection","text","date","Date","response","console","log","id","className","cols","rows","value","onChange","e","preventDefault","target","length","placeholder","onClick","Note","handleDeleteNote","size","NotesList","notes","map","note","data","Search","handleSearchNote","type","Header","handleToggleDarkMode","previousDarkMode","signOut","Home","userEmail","setNotes","darkMode","setDarkMode","setSearchText","useEffect","notesData","getDocs","result","docs","deleteNote","filter","Log","signUp","setSignUp","error","googleProvider","GoogleAuthProvider","values","email","password","pass","createUserWithEmailAndPassword","signInWithEmailAndPassword","src","noteImage","alt","enableReinitialize","initialValues","onSubmit","htmlFor","name","style","padding","signInWithRedirect","App","userGlobal","setUserGlobal","onAuthStateChanged","userFirebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAwBMA,EAAMC,YAXW,CACnBC,OAAQC,0CACRC,WAAYD,uCACZE,UAAWF,uBACXG,cAAeH,mCACfI,kBAAmBJ,eACnBK,MAAOL,4CACPM,cAAeN,iBAKbO,EAAKC,YAAaX,GAClBY,EAAOC,YAAQb,GAgBNU,GAfF,IAAII,IAeFJ,G,QCtCFK,EAAU,SAAC,GAAoB,EAAnBC,cAAoB,IACzC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KADwC,4CAWxC,4BAAAC,EAAA,+EAEmCC,YAAOC,YAAWZ,EAAI,SAAS,CAClDa,KAAML,EACNM,KAAM,IAAIC,OAJ1B,OAEkBC,EAFlB,OAMYC,QAAQC,IAAI,wBAAyBF,EAASG,IAC9CV,EAAY,IAPxB,gDAUQQ,QAAQC,IAAR,MAVR,0DAXwC,sBA0BxC,OACI,sBAAKE,UAAU,WAAf,UACI,0BACAC,KAAK,KACLC,KAAK,IACLC,MAAOf,EACPgB,SA5Ba,SAACC,GAClBA,EAAEC,iBAHiB,IAICD,EAAEE,OAAOJ,MAAMK,QAAU,GACzCnB,EAAYgB,EAAEE,OAAOJ,QA0BrBM,YAAY,wBAEZ,sBAAKT,UAAU,cAAf,UACI,kCAlCW,IAkCcZ,EAASoB,OAAlC,2BACA,wBAAQR,UAAU,OAAOU,QArCG,2CAqC5B,yB,QCrCHC,EAAO,SAAC,GAAwC,IAAvCjB,EAAsC,EAAtCA,KAAMK,EAAgC,EAAhCA,GAAIN,EAA4B,EAA5BA,KAAMmB,EAAsB,EAAtBA,iBAClC,OACI,sBAAKZ,UAAU,OAAOD,GAAIA,EAA1B,UACI,qCAAQN,KACR,sBAAKO,UAAU,cAAf,UACI,gCAAQN,IACR,cAAC,IAAD,CACAgB,QAAS,kBAAME,EAAiBb,IAChCC,UAAU,cACVa,KAAK,iBCTRC,EAAY,SAAC,GAA8C,IAA7CC,EAA4C,EAA5CA,MAAO7B,EAAqC,EAArCA,cAAe0B,EAAsB,EAAtBA,iBAC7C,OACI,sBAAKZ,UAAU,aAAf,UACKe,EAAMC,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,CACAlB,GAAIkB,EAAKlB,GACTN,KAAMwB,EAAKC,KAAKzB,KAEhBmB,iBAAkBA,OAGtB,cAAC,EAAD,CAAS1B,cAAeA,QCXvBiC,EAAS,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBACpB,OACI,sBAAKpB,UAAU,SAAf,UACI,cAAC,IAAD,CAAUA,UAAU,eAAea,KAAK,UACxC,uBAAOT,SAAU,SAACC,GAAD,OAAOe,EAAiBf,EAAEE,OAAOJ,QAASkB,KAAK,OAAOZ,YAAY,uB,gBCJlFa,EAAS,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,qBACpB,OACI,sBAAKvB,UAAU,SAAf,UACI,uCACA,sBAAKA,UAAU,gBAAf,UACA,wBACAA,UAAU,qBACVU,QAAS,kBACLa,GAAqB,SAACC,GAAD,OAAuBA,MAHhD,6CAOA,sBAAKxB,UAAU,gBAAgBU,QAAS,kBAAMe,YAAQ3C,IAAtD,UACI,cAAC,IAAD,IADJ,qBCiEG4C,MAzEf,YAA4B,IAAbC,EAAY,EAAZA,UACX,EAA0BxC,mBAAS,IAAnC,mBAAO4B,EAAP,KAAca,EAAd,KACA,EAAgCzC,oBAAS,GAAzC,mBAAO0C,EAAP,KAAiBC,EAAjB,KACA,EAAoC3C,mBAAS,IAA7C,mBAAmB4C,GAAnB,WAoDA,OAlDFC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAA3C,EAAA,sEACK4C,YAAQ1C,YAAWZ,EAAI,UAD5B,OACVuD,EADU,OAEhBP,EAASO,EAAOC,KAAKpB,KAAI,SAACC,GAAD,MAAW,CAAClB,GAAIkB,EAAKlB,GAAImB,KAAMD,EAAKC,YAF7C,2CAAH,qDAIfe,MACC,CAAClB,IAEJlB,QAAQC,IAAI6B,GA2CN,qBAAK3B,UAAS,UAAK6B,GAAY,aAA/B,SACF,sBAAK7B,UAAU,YAAf,UACE,cAAC,EAAD,CAAQuB,qBAAsBO,IAC9B,cAAC,EAAD,CAAQV,iBAAkBW,IAC1B,cAAC,EAAD,CAAWhB,MAAOA,EAClBH,iBA5CkB,SAACb,GACvB,IAAMsC,EAActB,EAAMuB,QAAO,SAACrB,GAAD,OAAWA,EAAKlB,KAAOA,EAAKkB,EAAKlB,GAAK,QAQvEF,QAAQC,IAAIuC,YClCD,MAA0B,sC,yBCQ5BE,G,OAAM,WACf,MAA4BpD,oBAAS,GAArC,mBAAOqD,EAAP,KAAeC,EAAf,KACA,EAA0BtD,mBAAS,IAAnC,mBAAOuD,EAAP,KAEMC,GAFN,KAEuB,IAAIC,KAJN,4CAMrB,WAA4BC,GAA5B,iBAAAvD,EAAA,yDACcwD,EAAQD,EAAOC,MACfC,EAAWF,EAAOG,MAErBR,EAJX,gCAK+BS,YAA+BnE,EAAMgE,EAAOC,GAL3E,sDAO+BG,YAA2BpE,EAAMgE,EAAOC,GAPvE,4DANqB,sBAqBrB,OACI,qBAAK/C,UAAU,YAAf,SACI,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,eAAf,SACA,qBAAKmD,IAAKC,EAAWC,IAAI,OAGzB,6BAAKb,EAAQ,UAAY,UACxBE,GAAS,mBAAG1C,UAAU,QAAb,SAAuB0C,IACjC,cAAC,IAAD,CACAY,oBAAoB,EAChBC,cAAe,CACXT,MAAO,GACPC,SAAS,IAEbS,SApCK,4CA8BT,SASQ,eAAC,IAAD,CAAMxD,UAAU,YAAhB,UACI,uBAAOyD,QAAQ,QAAf,mBACA,cAAC,IAAD,CACApC,KAAK,QACLtB,GAAG,QACH2D,KAAK,QACLjD,YAAY,oBACZkD,MAAO,CAACC,QAAQ,UAGhB,uBAAOH,QAAQ,QAAf,sBACA,cAAC,IAAD,CACA1D,GAAG,OACH2D,KAAK,OACLjD,YAAY,WACZY,KAAK,WACLsC,MAAO,CAACC,QAAQ,UAEhB,wBAAQ5D,UAAU,eAAeqB,KAAK,SAAtC,SAAkDmB,EAAQ,iBAAkB,eAK5E,wBAAQ9B,QAAS,kBAAO+B,GAAWD,IAAnC,SACKA,EAAQ,6BAA8B,mCAE3C,yBAAQxC,UAAU,eAAeU,QAhDjC,WACpBmD,YAAmB/E,EAAM6D,IA+CL,UACI,cAAC,IAAD,IADJ,+BCnDbmB,MAjBf,WACE,MAAoC3E,mBAAS,MAA7C,mBAAO4E,EAAP,KAAmBC,EAAnB,KASA,OALAC,YAAmBnF,GAAM,SAACoF,GACVF,EAAdE,GAA0D,SAK1D,mCACGH,EAAa,cAAC,EAAD,CAAMpC,UAAWoC,EAAWjB,QAAW,cAAC,EAAD,OCZ3DqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.19ca17fd.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, Timestamp, addDoc, collection, getDocs } from 'firebase/firestore';\r\nimport {\r\n    getAuth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signOut,\r\n    signInWithRedirect,\r\n    GoogleAuthProvider,\r\n\r\n} from 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_FIREBASE_APPID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst time = new Timestamp();\r\n\r\nexport {\r\n    time,\r\n    auth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signOut,\r\n    signInWithRedirect,\r\n    GoogleAuthProvider,\r\n    collection,\r\n    addDoc,\r\n    getDocs\r\n}\r\nexport default db","import React, {useState} from 'react'\r\nimport db from '../firebase/firebase_config'\r\nimport {collection, addDoc} from \"firebase/firestore\";\r\n\r\nexport const AddNote = ({handleAddNote}) => {\r\n    const [noteText, setNoteText] = useState('')\r\n    const characterLimit = 200\r\n\r\n    const handleChange = (e)=>{\r\n        e.preventDefault()\r\n        if(characterLimit - e.target.value.length >= 0 ){\r\n            setNoteText(e.target.value)\r\n        }\r\n    }\r\n\r\n    async function handleSaveClick(){\r\n        try {\r\n                const response = await addDoc(collection(db, \"notas\"),{\r\n                    text: noteText,\r\n                    date: new Date()\r\n                });\r\n                console.log('Nota escrita con id: ', response.id);\r\n                setNoteText('')\r\n            \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='note new'>\r\n            <textarea \r\n            cols=\"10\" \r\n            rows=\"8\"\r\n            value={noteText}\r\n            onChange={handleChange} \r\n            placeholder='Write a new note...' \r\n            ></textarea>\r\n            <div className=\"note-footer\">\r\n                <small>{characterLimit - noteText.length} available characters</small>\r\n                <button className='save' onClick={handleSaveClick} >Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MdDeleteForever} from 'react-icons/md'\r\n\r\n\r\nexport const Note = ({date, id, text, handleDeleteNote}) => {\r\n    return (\r\n        <div className='note' id={id} >\r\n            <span> {text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                onClick={() => handleDeleteNote(id)} \r\n                className='delete-icon' \r\n                size='1.3em' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AddNote } from './AddNote'\r\nimport { Note } from './Note'\r\n\r\nexport const NotesList = ({notes, handleAddNote, handleDeleteNote}) => {\r\n    return (\r\n        <div className='notes-list' >\r\n            {notes.map((note) =>(\r\n                <Note \r\n                id={note.id} \r\n                text={note.data.text} \r\n                // date={note.data.}  \r\n                handleDeleteNote={handleDeleteNote}\r\n                />           \r\n            ))}         \r\n            <AddNote handleAddNote={handleAddNote}  />   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\n\r\n\r\nexport const Search = ({handleSearchNote}) => {\r\n    return (\r\n        <div className='search'>\r\n            <MdSearch className='search-icons' size='1.3em' />\r\n            <input onChange={(e) => handleSearchNote(e.target.value)}  type='text' placeholder='Search Notes..' />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {auth, signOut} from '../firebase/firebase_config'\r\nimport{ AiOutlineCloseCircle} from 'react-icons/ai'\r\n\r\nexport const Header = ({handleToggleDarkMode}) => {\r\n    return (\r\n        <div className='header' >\r\n            <h1>Notes</h1>\r\n            <div className=\"headerOptions\" >\r\n            <button \r\n            className='theme headerbutton' \r\n            onClick={() => \r\n                handleToggleDarkMode((previousDarkMode) => !previousDarkMode) }  \r\n            >\r\n                Theme 🌙/🌞\r\n            </button>\r\n            <div className=\"signoutbutton\" onClick={() => signOut(auth) } >\r\n                <AiOutlineCloseCircle />\r\n                Sign Out    \r\n            </div>\r\n            </div>  \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NotesList} from './NotesList'\r\nimport {Search } from './Search'\r\nimport {nanoid} from 'nanoid'\r\nimport {Header} from './Header'\r\nimport db from '../firebase/firebase_config' \r\nimport {collection, getDocs, addDoc} from '../firebase/firebase_config'\r\n\r\nfunction Home({userEmail}) {\r\n    const [notes, setNotes] = useState([])\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n  useEffect(()=>{\r\n    const notesData = async () =>{\r\n      const result = await getDocs(collection(db, 'notas'))\r\n      setNotes(result.docs.map((note) => ({id: note.id, data: note.data()})))\r\n    }\r\n    notesData()\r\n  }, [notes])\r\n\r\n  console.log(userEmail);\r\n  \r\n\r\n\r\n  const handleDeleteNote =(id ) =>{\r\n    const deleteNote = (notes.filter((note) => (note.id === id?  note.id : null)))\r\n    // const data = doc(db, 'notas')\r\n    // const notesData = async () =>{\r\n    //   await updateDoc(data, {\r\n    //     [id]: deleteField()\r\n    //   })\r\n    // }\r\n    // notesData();\r\n    console.log(deleteNote);\r\n  }\r\n\r\n \r\n//   async function handleAddNote(noteText){\r\n//         try {\r\n//                 const response = await addDoc(collection(db, \"notas\"),{\r\n//                     text: noteText,\r\n//                     date: new Date()\r\n//                 });\r\n//                 console.log('Nota escrita con id: ', response.id);\r\n            \r\n//         } catch (error) {\r\n//             console.log(error);\r\n//         }\r\n//     }\r\n  \r\n\r\n\r\n  const addNote = (text) =>{\r\n    const date = new Date();\r\n    const newNote = {\r\n      id: nanoid(),\r\n      text: text,\r\n      date: date.toLocaleDateString(),\r\n    };\r\n    const newNotes = [...notes, newNote];\r\n    setNotes(newNotes)\r\n  }\r\n    return (\r\n        <div className={`${darkMode && 'dark-mode'}`} >\r\n      <div className='container' >\r\n        <Header handleToggleDarkMode={setDarkMode} />\r\n        <Search handleSearchNote={setSearchText} /> \r\n        <NotesList notes={notes} \r\n        handleDeleteNote={handleDeleteNote}\r\n         />\r\n        {/* <NotesList notes={notes.filter((note) =>(\r\n          note.text.toLowerCase().includes(searchText)\r\n        ))} \r\n        handleAddNote={addNote} \r\n        handleDeleteNote={handleDeleteNote} /> */}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/noteImage.a4a8b030.png\";","import React, {useState, useRef} from 'react'\r\nimport noteImage from '../images/noteImage.png'\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithRedirect, GoogleAuthProvider} from '../firebase/firebase_config';\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport './Login.css'\r\n\r\nexport const Log = () => {\r\n    const [signUp, setSignUp] = useState(false)\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const googleProvider = new GoogleAuthProvider();\r\n\r\n    async function handleSubmit(values){\r\n            const email = values.email;\r\n            const password = values.pass;\r\n\r\n            if(signUp){\r\n                const user = await createUserWithEmailAndPassword(auth, email, password);\r\n            }else{\r\n                const user = await signInWithEmailAndPassword(auth, email, password)\r\n            }    \r\n    }\r\n\r\n    const SignInWithGoogle =() =>{\r\n        signInWithRedirect(auth, googleProvider)\r\n    }\r\n\r\n    return (\r\n        <div className='container'  >\r\n            <div className=\"contentLog\">\r\n                <div className=\"imgContainer\" >\r\n                <img src={noteImage} alt=\"\" />\r\n                </div>\r\n                \r\n                <h1>{signUp? \"Sign Up\" : \"Login\"  }</h1>\r\n                {error && <p className='error' >{error}</p>}\r\n                <Formik\r\n                enableReinitialize={true}\r\n                    initialValues={{\r\n                        email: '',\r\n                        password:''\r\n                    }}\r\n                    onSubmit={handleSubmit}\r\n                    >\r\n                        \r\n                        <Form className=\"formStyle\"  >\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"example@gmail.com\"\r\n                            style={{padding:\"10px\"}}\r\n                            />\r\n\r\n                            <label htmlFor=\"email\">Password</label>\r\n                            <Field\r\n                            id=\"pass\"\r\n                            name=\"pass\"\r\n                            placeholder=\"password\"\r\n                            type=\"password\"\r\n                            style={{padding:\"10px\"}}\r\n                            />\r\n                            <button className=\"buttonSubmit\" type=\"submit\"  >{signUp? \"Create Account\": \"Login\"}</button>\r\n                            \r\n                        </Form>\r\n                        \r\n                </Formik>\r\n                            <button onClick={() => (setSignUp(!signUp))} >\r\n                                {signUp? \"You have an account? Login\": \"Don't have an account? Sign up\"}\r\n                            </button>\r\n                            <button className=\"googleButton\" onClick={SignInWithGoogle} >\r\n                                <FcGoogle /> Login with Google\r\n                            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport Home from './components/Home';\nimport {Log} from './components/Log';\nimport {auth, onAuthStateChanged } from './firebase/firebase_config'\n\nfunction App() {\n  const [userGlobal, setUserGlobal] = useState(null);\n\n\n    //to see how the state of the user is changing \n  onAuthStateChanged(auth, (userFirebase)=>{\n    userFirebase? setUserGlobal(userFirebase) : setUserGlobal(null)\n  })\n\n\n  return (\n    <>\n      {userGlobal ? <Home userEmail={userGlobal.email} />: <Log/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}