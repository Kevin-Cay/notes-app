{"version":3,"sources":["firebase/firebase_config.js","components/AddNote.jsx","components/Note.jsx","components/NotesList.jsx","components/Search.jsx","components/Header.jsx","components/Home.jsx","images/noteImage.png","components/Log.jsx","App.js","index.js"],"names":["app","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","Timestamp","AddNote","handleAddNote","useState","noteText","setNoteText","a","console","log","className","cols","rows","value","onChange","e","preventDefault","target","length","placeholder","size","style","cursor","onClick","Note","date","id","text","handleDeleteNote","NotesList","notes","map","note","data","moment","toDate","calendar","Search","handleSearchNote","type","Header","handleToggleDarkMode","darkMode","previousDarkMode","signOut","Home","userEmail","setNotes","setDarkMode","searchText","setSearchText","searchNotesFromDb","userId","getDocs","collection","documents","docs","setDoc","doc","Date","newDocuments","deleteNote","filter","deleteDoc","addDoc","result","useEffect","searchNotes","toLowerCase","includes","Log","signUp","setSignUp","error","googleProvider","GoogleAuthProvider","values","email","password","pass","createUserWithEmailAndPassword","signInWithEmailAndPassword","src","noteImage","alt","enableReinitialize","initialValues","onSubmit","htmlFor","name","padding","signInWithRedirect","App","userGlobal","setUserGlobal","onAuthStateChanged","userFirebase","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.898177a9.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, Timestamp, addDoc, collection, getDocs, doc, getDoc, setDoc, updateDoc, deleteDoc } from 'firebase/firestore';\r\nimport {\r\n    getAuth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signOut,\r\n    signInWithRedirect,\r\n    GoogleAuthProvider,\r\n\r\n} from 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_FIREBASE_APPID,\r\n    measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\r\n};\r\n\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nconst auth = getAuth(app);\r\nconst time = new Timestamp();\r\n\r\nexport {\r\n    time,\r\n    auth,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signOut,\r\n    signInWithRedirect,\r\n    GoogleAuthProvider,\r\n    collection,\r\n    addDoc,\r\n    getDocs,\r\n    doc,\r\n    getDoc,\r\n    setDoc,\r\n    updateDoc,\r\n    deleteDoc\r\n}\r\nexport default db","import React, {useState} from 'react'\r\nimport {VscDebugRestart} from 'react-icons/vsc'\r\nimport db from '../firebase/firebase_config'\r\nimport {collection, addDoc} from \"../firebase/firebase_config\";\r\n\r\nexport const AddNote = ({handleAddNote}) => {\r\n    const [noteText, setNoteText] = useState('')\r\n    const characterLimit = 200\r\n\r\n    const handleChange = (e)=>{\r\n        e.preventDefault()\r\n        if(characterLimit - e.target.value.length >= 0 ){\r\n            setNoteText(e.target.value)\r\n        }\r\n    }\r\n\r\n    const handleResetText = () =>{\r\n        setNoteText('')\r\n    }\r\n\r\n    async function handleSaveClick(){\r\n                handleAddNote(noteText)\r\n                console.log('Send text ');\r\n                setNoteText('')\r\n         \r\n    }\r\n    \r\n\r\n    return (\r\n        <div className='note new'>\r\n            <textarea \r\n            cols=\"10\" \r\n            rows=\"8\"\r\n            value={noteText}\r\n            onChange={handleChange} \r\n            placeholder='Type to add a note here...' \r\n            ></textarea>\r\n            <VscDebugRestart size={\"1.5rem\"} style={{cursor: \"pointer\"}}  onClick={handleResetText} />\r\n            <div className=\"note-footer\">\r\n                <small>{characterLimit - noteText.length} available characters</small>\r\n                <button className='save' onClick={handleSaveClick} >Save</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {MdDeleteForever} from 'react-icons/md'\r\n\r\n\r\nexport const Note = ({date, id, text, handleDeleteNote}) => {\r\n    return (\r\n        <div className='note' id={id} >\r\n            <span> {text}</span>\r\n            <div className=\"note-footer\">\r\n                <small>{date}</small>\r\n                <MdDeleteForever \r\n                onClick={() => handleDeleteNote(id)} \r\n                className='delete-icon' \r\n                size='1.3em' />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { AddNote } from './AddNote'\r\nimport { Note } from './Note'\r\nimport moment from 'moment'\r\n\r\nexport const NotesList = ({notes, handleAddNote, handleDeleteNote}) => {\r\n\r\n    //notes.docs.map((doc) =>( console.log(doc.data().date, doc.data().text)))\r\n    \r\n    return (\r\n      //setNotes(result.docs.map((note) => ({id: note.id, date: moment(note.data().date.toDate()).calendar() , data: note.data()})))\r\n\r\n        <div className='notes-list' >\r\n            {  notes.map((note) =>(\r\n                <Note \r\n                id={note.id} \r\n                text={note.data().text} \r\n                date={moment(note.data().date.toDate()).calendar()}  \r\n                handleDeleteNote={handleDeleteNote}\r\n                />           \r\n            ))}         \r\n            <AddNote handleAddNote={handleAddNote}  />   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { MdSearch } from 'react-icons/md'\r\nimport {AiFillCloseCircle} from 'react-icons/ai'\r\n\r\n\r\nexport const Search = ({handleSearchNote}) => {\r\n    return (\r\n        <div className='search'>\r\n            <MdSearch \r\n            className='search-icons' \r\n            size='1.3em' />\r\n            <input \r\n            onChange={(e) => handleSearchNote(e.target.value)}  \r\n            type='text' \r\n            placeholder='Search Notes..' />\r\n            {/* <AiFillCloseCircle \r\n            className='search-icons' \r\n            size='1.3em' \r\n            style={{cursor: \"pointer\"}} \r\n            onClick={() => handleSearchNote('') }  /> */}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {auth, signOut} from '../firebase/firebase_config'\r\nimport{ AiOutlineCloseCircle} from 'react-icons/ai'\r\n\r\nexport const Header = ({handleToggleDarkMode, darkMode}) => {\r\n    return (\r\n        <div className='header' >\r\n            <h1>Notes</h1>\r\n            <div className=\"headerOptions\" >\r\n            <button \r\n            className='theme headerbutton' \r\n            onClick={() => \r\n                handleToggleDarkMode((previousDarkMode) => !previousDarkMode) }  \r\n            >\r\n                Theme {darkMode? \"🌞\" :\"🌙\" }\r\n            </button>\r\n            <div className=\"signoutbutton\" onClick={() => (signOut(auth), console.log(\"user out\")) } >\r\n                <AiOutlineCloseCircle />\r\n                    Log Out \r\n            </div>\r\n            </div>  \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {NotesList} from './NotesList'\r\nimport {Search } from './Search'\r\nimport {nanoid} from 'nanoid'\r\nimport {Header} from './Header'\r\nimport moment from 'moment'\r\nimport db from '../firebase/firebase_config' \r\nimport {collection, getDocs, addDoc, doc, getDoc, setDoc, updateDocs, deleteDoc} from '../firebase/firebase_config'\r\n\r\nfunction Home({userEmail}) {\r\n    const [notes, setNotes] = useState(null)\r\n    const [darkMode, setDarkMode] = useState(false);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n\r\n  async function searchNotesFromDb(userId){\r\n    //create a doc reference\r\n    //const documentRef= collection(db, `notesUsers/${userId}/notes`);\r\n    // //search document\r\n    // const consulta = await getDoc(documentRef);\r\n    //validate document\r\n    const documents = await getDocs(collection(db, `notesUsers/${userId}/notes`))\r\n    if(documents.docs.length > 0){\r\n      return documents\r\n    }else{\r\n      await setDoc(doc(collection(db, `notesUsers/${userId}/notes`)),\r\n            {text: \"example note\",\r\n            date: new Date()} );\r\n      const newDocuments = await getDocs(collection(db, `notesUsers/${userId}/notes`));\r\n      return newDocuments\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    async function searchNotes(){\r\n      const result = await searchNotesFromDb(userEmail);\r\n      //result.docs.map((note) => (console.log(note.id)))\r\n      setNotes(result.docs)\r\n      //setNotes(result.docs.map((note) => ({id: note.id, date: moment(note.data().date.toDate()).calendar() , data: note.data()})))\r\n    }\r\n    searchNotes();\r\n  }, [])\r\n\r\n  \r\n\r\n\r\n  async function handleDeleteNote(userId ){\r\n    //const deleteNote = (notes.docs.filter((note) => (note.id !== userId?  note : null)))\r\n    const deleteNote = (notes.filter((note) => note.id !== userId ));\r\n    await deleteDoc(doc(collection(db, `notesUsers/${userEmail}/notes`),`${userId}`) );\r\n      //update database \r\n      console.log('-1 note');\r\n    setNotes(deleteNote)\r\n  }\r\n\r\n  async function handleAddNote(text){\r\n    try {\r\n            const response = await addDoc(collection(db, `notesUsers/${userEmail}/notes`),{\r\n                text: text,\r\n                date: new Date()\r\n            });\r\n            const result = await searchNotesFromDb(userEmail);\r\n     \r\n           setNotes(result.docs)\r\n            \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n  //  function handleSearchText(){\r\n  //     const searchNotes = (notes.filter((note) => note.data().text === searchText ));\r\n  //     setNotes(searchNotes);\r\n  // }\r\n    return (\r\n        <div className={`${darkMode && 'dark-mode'}`} >\r\n      <div className='container' >\r\n        <Header darkMode={darkMode} handleToggleDarkMode={setDarkMode} />\r\n        <Search handleSearchNote={setSearchText} /> \r\n        { notes?  <NotesList id={userEmail} notes={notes.filter((note) => note.data().text.toLowerCase().includes(searchText))} \r\n        handleDeleteNote={handleDeleteNote}\r\n        handleAddNote={handleAddNote}\r\n         />: null}\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","export default __webpack_public_path__ + \"static/media/noteImage.a4a8b030.png\";","import React, {useState, useRef} from 'react'\r\nimport noteImage from '../images/noteImage.png'\r\nimport { Formik, Field, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport {auth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signInWithRedirect, GoogleAuthProvider} from '../firebase/firebase_config';\r\nimport {FcGoogle} from 'react-icons/fc'\r\nimport './Login.css'\r\n\r\nexport const Log = () => {\r\n    const [signUp, setSignUp] = useState(false)\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const googleProvider = new GoogleAuthProvider();\r\n\r\n    async function handleSubmit(values){\r\n            const email = values.email;\r\n            const password = values.pass;\r\n\r\n            if(signUp){\r\n                const user = await createUserWithEmailAndPassword(auth, email, password);\r\n            }else{\r\n                const user = await signInWithEmailAndPassword(auth, email, password)\r\n            }    \r\n    }\r\n\r\n    const SignInWithGoogle =() =>{\r\n        signInWithRedirect(auth, googleProvider)\r\n    }\r\n\r\n    return (\r\n        <div className='container'  >\r\n            <div className=\"contentLog\">\r\n                <div className=\"imgContainer\" >\r\n                <img src={noteImage} alt=\"\" />\r\n                </div>\r\n                \r\n                <h1>{signUp? \"Sign Up\" : \"Login\"  }</h1>\r\n                {error && <p className='error' >{error}</p>}\r\n                <Formik\r\n                enableReinitialize={true}\r\n                    initialValues={{\r\n                        email: '',\r\n                        password:''\r\n                    }}\r\n                    onSubmit={handleSubmit}\r\n                    >\r\n                        \r\n                        <Form className=\"formStyle\"  >\r\n                            <label htmlFor=\"email\">Email</label>\r\n                            <Field \r\n                            type=\"email\" \r\n                            id=\"email\" \r\n                            name=\"email\" \r\n                            placeholder=\"example@gmail.com\"\r\n                            style={{padding:\"10px\"}}\r\n                            />\r\n\r\n                            <label htmlFor=\"email\">Password</label>\r\n                            <Field\r\n                            id=\"pass\"\r\n                            name=\"pass\"\r\n                            placeholder=\"password\"\r\n                            type=\"password\"\r\n                            style={{padding:\"10px\"}}\r\n                            />\r\n                            <button className=\"buttonSubmit\" type=\"submit\"  >{signUp? \"Create Account\": \"Login\"}</button>\r\n                            \r\n                        </Form>\r\n                        \r\n                </Formik>\r\n                            <button onClick={() => (setSignUp(!signUp))} >\r\n                                {signUp? \"You have an account? Login\": \"Don't have an account? Sign up\"}\r\n                            </button>\r\n                            <button className=\"googleButton\" onClick={SignInWithGoogle} >\r\n                                <FcGoogle /> Login with Google\r\n                            </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\nimport Home from './components/Home';\nimport {Log} from './components/Log';\nimport {auth, onAuthStateChanged } from './firebase/firebase_config'\n\nfunction App() {\n  const [userGlobal, setUserGlobal] = useState(null);\n\n\n    //to see how the state of the user is changing \n  onAuthStateChanged(auth, (userFirebase)=>{\n    userFirebase? setUserGlobal(userFirebase) : setUserGlobal(null)\n  })\n\n\n  return (\n    <>\n      {userGlobal ? <Home userEmail={userGlobal.email} />: <Log/>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}